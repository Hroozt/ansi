---
- name: Install Java
  hosts: all
  tasks:
    - name: Set facts for Java 11 vars
      set_fact:
        java_home: "/opt/jdk/{{ java_jdk_version }}"
      tags: java
    - name: Upload .tar.gz file containing binaries from local storage
      copy:
        src: "{{ java_oracle_jdk_package }}"
        dest: "/tmp/jdk-{{ java_jdk_version }}.tar.gz"
      register: download_java_binaries
      until: download_java_binaries is succeeded
      tags: java
    - name: Ensure installation dir exists
      #become: true
      file:
        state: directory
        path: "{{ java_home }}"
      tags: java
    - name: Extract java in the installation directory
      #become: true
      unarchive:
        copy: false
        src: "/tmp/jdk-{{ java_jdk_version }}.tar.gz"
        dest: "{{ java_home }}"
        extra_opts: [--strip-components=1]
        creates: "{{ java_home }}/bin/java"
      tags:
        - java
    - name: Export environment variables
      #become: true
      template:
        src: jdk.sh.j2
        dest: /etc/profile.d/jdk.sh
      tags: java
- name: Install Elasticsearch
  hosts: elk
  tasks:
    - name: Upload Elasticsearch from remote URL
      get_url:
        url: "https://fossies.org/linux/www/elasticsearch-{{ elastic_version }}-linux-x86_64.tar.gz"
        dest: "/tmp/elasticsearch-{{ elastic_version }}-linux-x86_64.tar.gz"
        mode: 0755
        timeout: 60
        force: true
        validate_certs: false
      register: get_elastic
      until: get_elastic is succeeded
      tags: elastic
    - name: Create directrory for Elasticsearch
      file:
        state: directory
        path: "{{ elastic_home }}"
      tags: elastic
    - name: Extract Elasticsearch in the installation directory
      #become: true
      unarchive:
        copy: false
        src: "/tmp/elasticsearch-{{ elastic_version }}-linux-x86_64.tar.gz"
        dest: "{{ elastic_home }}"
        extra_opts: [--strip-components=1]
        creates: "{{ elastic_home }}/bin/elasticsearch"
      tags:
        - elastic
    - name: Set environment Elastic
      #become: true
      template:
        src: templates/elk.sh.j2
        dest: /etc/profile.d/elk.sh
      tags: elastic
- name: Install Kibana
  hosts: kib
  tasks:
    - name: Check if kibana is installed
      command: dpkg-query -W kibana
      register: kibana_check_deb
      failed_when: kibana_check_deb.rc > 1
      changed_when: kibana_check_deb.rc == 1
      tags: kibana

#    - name: Download kibana
#      get_url:
#        url= {{ kibana_url }}
#        dest="/var/kibana-{{ kibana_version }}.deb"
#      when: kibana_check_deb.rc == 1 and kibana_url
#      tags: kibana

    - name: Upload .tar.gz file containing binaries from local storage
      copy:
        src: "{{ kibana_package }}"
        dest: "/tmp/kibana-{{ kibana_version }}.deb"
      register: download_kibana_binaries
      until: download_kibana_binaries is succeeded
      tags: java    
    - name: Install kibana-{{ kibana_version }}
      apt: deb="/tmp/kibana-{{ kibana_version }}.deb"
      when: kibana_check_deb.rc == 1
      notify:
        - Start Kibana
      register: "kibana_installed"
      tags: kibana
    - name: Tweak kibana's service file for PID file permissions
      lineinfile:
        path: /etc/systemd/system/kibana.service
        insertafter: '^\[Service\]'
        line: 'RuntimeDirectory=kibana'
      tags: kibana
    - name: Copy Kibana configuration, version 7.x+
      template:
        src: kbn.yml.j2
        dest: "/etc/kibana/kibana.yml"
        owner: root
        group: root
        mode: 0644
      notify: restart kibana
      tags: kibana
